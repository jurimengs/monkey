server需要通用性，就必需要对数据对象有一个统一的模型， 
对于业务线上所有的entity ， 要能具备将其转换成 数据模型的能力， 最终整理成一个能入库的 sql

所以理想的模型是， 统一数据结构 ， 要具备按表检索的能力， 要具备针对某一个数据对象 的某一个属性CRUD的能力

数据结构如下
table_name:
    datas:[
        data: {
            key:value
            key:value
            key:value
            key:value
            key:value
        }
    ]
    
数据复制：
节点间的数据同步分两部分：
一部分是业务数据， 一部分是业务数据操作的时候，产生的Event 数据，
业务数据的同步是为了保证每个节点都对原始数据做备份防止丢失， 
Event 数据的同步是为了每个节点都能够记录哪些数据做了操作， 以便执行相应的持久化

    数据同步：
    因为数据是存储在store中， 而store又集中在 Tables中， 因此数据同步又称： Tables同步
    Tables同步分存量， 和增量同步。
    Tables 存量同步是一个新的节点加入的时候执行，不过也要区分，是首次加入还是服务重启加入，就需要启动的时候指定一个参数用于标识; 
        启动的时候，第一个节点启动成功后，再启动其他节点。第一个节点会判断有没有已启动的其他节点，如果没有则自己需要从数据库加载数据到内存
        如果有，则随机取一个节点进行数据同步
        数据同步以请求 -》 推送 -》接受的方式，即第二个节点向第一个节点发送数据同步请求， 第一个节点收到请求后， 则开始主动将存量数据进行推送
        所以每个节点触发推送的那一刻，应该作为该节点需要同步的存量数据的标记点，
    Tables 增量同步是某个节点加入新的数据的时候执行，
    
