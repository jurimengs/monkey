<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="Trial">
	<sql id="getTrialPage" isRead="true">
		<![CDATA[
			SELECT
				t.id,
				u.id userId,
				u.emp_no empNo,
				u.user_name userName,
				u.organ_id organId,
				u.gangwei_id gangweiId,
				g.gangwei_name gangweiName,
				u.entry_date entryDate,
				u.entry_shop_date entryShopDate,
				t.`status`,
				t.create_uid createUid,
				t.end_date endDate,
				t.process_id processId,
				uu.user_name updateUserName,
				t.update_date updateDate
				<#if selfFields??  && selfFields?size gt 0>
                    ,
                    <#list selfFields as selfField>
                        ext.${selfField}
                        <#if selfField_has_next>,</#if>
                    </#list>
                </#if>
			FROM
				wec_user u
			LEFT JOIN t_emp_trial t ON u.id = t.user_id AND t.`status` != '5'
			LEFT JOIN t_gangwei g ON u.gangwei_id = g.id
			LEFT JOIN t_organ o on u.organ_id = o.id
			LEFT JOIN t_ext_t_emp_trial ext ON t.id = ext.id
			LEFT JOIN wec_user uu ON t.update_uid = uu.id
			WHERE
			u.company_id = :companyId
			and u.user_status = '10'
			and u.status = 0
			<#if path??  && path?length gt 0>
			AND o.organ_paths like concat(:path,'%')
			</#if>
			<#if key??  && key?length gt 0>
			AND (
			o.organ_name LIKE CONCAT('%', :key, '%')
			OR g.gangwei_name LIKE CONCAT('%', :key, '%')
			OR u.user_name LIKE CONCAT('%', :key, '%')
			OR u.emp_no LIKE CONCAT('%', :key, '%')
				)
			</#if>
			<#if dataRange??  && dataRange?length gt 0>
			${dataRange}
			 </#if>
	       	<#if navigation??  && navigation?length gt 0>
	        <#switch navigation>
	        <#case 1>
	         and t.id is null
	         <#break>
	        <#case 2>
	         and t.status = '10'
	         <#break>
	        <#case 3>
	         and t.status = '60'
	         <#break>
	         <#case 4>
	       	 and t.status in('20','30')
	         <#break>
	         <#default>
	         </#switch>
	       	</#if>
            <#if functions??  && functions?size gt 0>
                AND(
                <#list functions as thisfunc>
                    <#if thisfunc??  && thisfunc?size gt 0>
                        (
                        <#list thisfunc as selffunc>
                            ${selffunc.sqlStr}
                            <#if selffunc.funcType??  && selffunc.funcType?length gt 0>
                                <#if selffunc.funcType = 0>
                                    <
                                </#if>
                                <#if selffunc.funcType = 1>
                                    =
                                </#if>
                                <#if selffunc.funcType = 2>
                                    >
                                </#if>
                                <#else>
                                    like
                                </#if>
                                '${selffunc.funcValue}'
                            <#if selffunc_has_next> and</#if>
                        </#list>
                        )
                        <#if thisfunc_has_next> or </#if>
                    </#if>
                </#list>
                )
            </#if>
            order by t.create_date desc
		]]>
	</sql>
	<sql id="getUserTrialInfo" >
        <![CDATA[
			SELECT
				t.id,
				u.id userId,
				u.emp_no empNo,
				o.id organId,
				o.organ_name organName,
				u.user_name userName,
				u.organ_id organId,
				u.gangwei_id gangweiId,
				g.gangwei_name gangweiName,
				u.entry_date entryDate,
				u.entry_shop_date entryShopDate,
				t.status,
				t.create_uid createUid,
				t.end_date endDate,
				t.remark,
				t.process_id processId,
				t.company_id companyId
				<#if customFieldList??  && customFieldList?size gt 0>
                    ,
                    <#list customFieldList as selfField>
                        ext.${selfField.fieldName}
                        <#if selfField_has_next>,</#if>
                    </#list>
                </#if>
			FROM
				t_emp_trial t
			LEFT JOIN wec_user u ON t.user_id = u.id
			LEFT JOIN t_gangwei g ON u.gangwei_id = g.id
			left join t_organ o on u.organ_id = o.id
			LEFT JOIN t_ext_t_emp_trial ext ON t.id = ext.id
			where t.id = :id
					]]>
	</sql>
	<sql id="InEmpTrialExtInfo" >
        <![CDATA[
		INSERT INTO t_ext_t_emp_trial
		(id
		, company_id
		<#if filedList??  && filedList?size gt 0>
            <#list filedList as filed>
            ,${filed}
        	</#list>
        </#if>
		)
		VALUES
		(:id
		, :companyId
		<#if valueList??  && valueList?size gt 0>
            <#list valueList as value>
            ,'${value}'
        	</#list>
        </#if>
		)
			]]>
    </sql>
    <sql id="updateEmpTrialExtInfo" >
        <![CDATA[
		UPDATE t_ext_t_emp_trial
		SET
		id = :id
		<#if filesValue??  && filesValue?size gt 0>
            <#list filesValue as filed>
            ,${filed.filed} = '${filed.value}'
        	</#list>
        </#if>
		WHERE
			id = :id
			]]>
    </sql>
    <sql id="getTrialNavigationBarCount" isRead="true">
        <![CDATA[
        SELECT * from (
			SELECT
				COUNT(*) allCount
			FROM
				wec_user u
			LEFT JOIN t_emp_trial t ON u.id = t.user_id AND t.`status` != '5'
			LEFT JOIN t_gangwei g ON u.gangwei_id = g.id
			left join t_organ o on u.organ_id = o.id
			WHERE
			u.company_id = :companyId
			and u.user_status = '10'
			and u.status = '0'
			<#if path??  && path?length gt 0>
			AND o.organ_paths like concat(:path,'%')
			</#if>
			<#if key??  && key?length gt 0>
			AND (
			o.organ_name LIKE CONCAT('%', :key, '%')
			OR g.gangwei_name LIKE CONCAT('%', :key, '%')
			OR u.user_name LIKE CONCAT('%', :key, '%')
			OR u.emp_no LIKE CONCAT('%', :key, '%')
				)
			</#if>
			${dataRange}
       		<#if functions??  && functions?size gt 0>
                AND(
                <#list functions as thisfunc>
                    <#if thisfunc??  && thisfunc?size gt 0>
                        (
                        <#list thisfunc as selffunc>
                            ${selffunc.sqlStr}
                            <#if selffunc.funcType??  && selffunc.funcType?length gt 0>
                                <#if selffunc.funcType = 0>
                                    <
                                </#if>
                                <#if selffunc.funcType = 1>
                                    =
                                </#if>
                                <#if selffunc.funcType = 2>
                                    >
                                </#if>
                                <#else>
                                    like
                                </#if>
                                '${selffunc.funcValue}'
                            <#if selffunc_has_next> and</#if>
                        </#list>
                        )
                        <#if thisfunc_has_next> or </#if>
                    </#if>
                </#list>
                )
            </#if>
		) a ,(
			SELECT
				count(*) internshipCount
			FROM
				wec_user u
			LEFT JOIN t_emp_trial t ON u.id = t.user_id AND t.`status` != '5'
			LEFT JOIN t_gangwei g ON u.gangwei_id = g.id
			left join t_organ o on u.organ_id = o.id
			WHERE
			t.id is null
			and u.company_id = :companyId
			and u.user_status = '10'
			and u.status = '0'
			<#if path??  && path?length gt 0>
			AND o.organ_paths like concat(:path,'%')
			</#if>
			<#if key??  && key?length gt 0>
			AND (
			o.organ_name LIKE CONCAT('%', :key, '%')
			OR g.gangwei_name LIKE CONCAT('%', :key, '%')
			OR u.user_name LIKE CONCAT('%', :key, '%')
			OR u.emp_no LIKE CONCAT('%', :key, '%')
				)
			</#if>
			${dataRange}
       		<#if functions??  && functions?size gt 0>
                AND(
                <#list functions as thisfunc>
                    <#if thisfunc??  && thisfunc?size gt 0>
                        (
                        <#list thisfunc as selffunc>
                            ${selffunc.sqlStr}
                            <#if selffunc.funcType??  && selffunc.funcType?length gt 0>
                                <#if selffunc.funcType = 0>
                                    <
                                </#if>
                                <#if selffunc.funcType = 1>
                                    =
                                </#if>
                                <#if selffunc.funcType = 2>
                                    >
                                </#if>
                                <#else>
                                    like
                                </#if>
                                '${selffunc.funcValue}'
                            <#if selffunc_has_next> and</#if>
                        </#list>
                        )
                        <#if thisfunc_has_next> or </#if>
                    </#if>
                </#list>
                )
            </#if>
		) b ,
		(
				SELECT
				count(*) approvalCount
			FROM
				t_emp_trial t
			LEFT JOIN wec_user u ON t.user_id = u.id
			left join t_organ o on u.organ_id = o.id
			LEFT JOIN t_gangwei g ON u.gangwei_id = g.id
			WHERE
				u.company_id = :companyId
				and u.user_status = '10'
				and u.status = '0'
			<#if path??  && path?length gt 0>
	           	AND o.organ_paths like concat(:path,'%')
	       		</#if>
	       		<#if key??  && key?length gt 0>
	           	AND (
				o.organ_name LIKE CONCAT('%', :key, '%')
				OR g.gangwei_name LIKE CONCAT('%', :key, '%')
				OR u.user_name LIKE CONCAT('%', :key, '%')
				OR u.emp_no LIKE CONCAT('%', :key, '%')
				)
	       		</#if>
			and t.status = '10'
			${dataRange}
			<#if functions??  && functions?size gt 0>
                AND(
                <#list functions as thisfunc>
                    <#if thisfunc??  && thisfunc?size gt 0>
                        (
                        <#list thisfunc as selffunc>
                            ${selffunc.sqlStr}
                            <#if selffunc.funcType??  && selffunc.funcType?length gt 0>
                                <#if selffunc.funcType = 0>
                                    <
                                </#if>
                                <#if selffunc.funcType = 1>
                                    =
                                </#if>
                                <#if selffunc.funcType = 2>
                                    >
                                </#if>
                                <#else>
                                    like
                                </#if>
                                '${selffunc.funcValue}'
                            <#if selffunc_has_next> and</#if>
                        </#list>
                        )
                        <#if thisfunc_has_next> or </#if>
                    </#if>
                </#list>
                )
            </#if>
		) c ,
		(
				SELECT
				count(*) finishCount
			FROM
				t_emp_trial t
			LEFT JOIN wec_user u ON t.user_id = u.id
			left join t_organ o on u.organ_id = o.id
			LEFT JOIN t_gangwei g ON u.gangwei_id = g.id
			WHERE
				u.company_id = :companyId
				and u.user_status = '10'
				and u.status = '0'
			<#if path??  && path?length gt 0>
	           	AND o.organ_paths like concat(:path,'%')
	       		</#if>
			and t.status = '60'
			<#if key??  && key?length gt 0>
	           	AND (
				o.organ_name LIKE CONCAT('%', :key, '%')
				OR g.gangwei_name LIKE CONCAT('%', :key, '%')
				OR u.user_name LIKE CONCAT('%', :key, '%')
				OR u.emp_no LIKE CONCAT('%', :key, '%')
				)
	       		</#if>
			${dataRange}
		<#if functions??  && functions?size gt 0>
                AND(
                <#list functions as thisfunc>
                    <#if thisfunc??  && thisfunc?size gt 0>
                        (
                        <#list thisfunc as selffunc>
                            ${selffunc.sqlStr}
                            <#if selffunc.funcType??  && selffunc.funcType?length gt 0>
                                <#if selffunc.funcType = 0>
                                    <
                                </#if>
                                <#if selffunc.funcType = 1>
                                    =
                                </#if>
                                <#if selffunc.funcType = 2>
                                    >
                                </#if>
                                <#else>
                                    like
                                </#if>
                                '${selffunc.funcValue}'
                            <#if selffunc_has_next> and</#if>
                        </#list>
                        )
                        <#if thisfunc_has_next> or </#if>
                    </#if>
                </#list>
                )
            </#if>
		) d ,(
				SELECT
				count(*) refuseCount
			FROM
				t_emp_trial t
			LEFT JOIN wec_user u ON t.user_id = u.id
			left join t_organ o on u.organ_id = o.id
			LEFT JOIN t_gangwei g ON u.gangwei_id = g.id
			WHERE
				u.company_id = :companyId
				and u.user_status = '10'
				and u.status = '0'
			<#if path??  && path?length gt 0>
	           	AND o.organ_paths like concat(:path,'%')
	       		</#if>
			and t.status in('20','30')
			<#if key??  && key?length gt 0>
	           	AND (
				o.organ_name LIKE CONCAT('%', :key, '%')
				OR g.gangwei_name LIKE CONCAT('%', :key, '%')
				OR u.user_name LIKE CONCAT('%', :key, '%')
				OR u.emp_no LIKE CONCAT('%', :key, '%')
				)
	       		</#if>
			${dataRange}
			<#if functions??  && functions?size gt 0>
                AND(
                <#list functions as thisfunc>
                    <#if thisfunc??  && thisfunc?size gt 0>
                        (
                        <#list thisfunc as selffunc>
                            ${selffunc.sqlStr}
                            <#if selffunc.funcType??  && selffunc.funcType?length gt 0>
                                <#if selffunc.funcType = 0>
                                    <
                                </#if>
                                <#if selffunc.funcType = 1>
                                    =
                                </#if>
                                <#if selffunc.funcType = 2>
                                    >
                                </#if>
                                <#else>
                                    like
                                </#if>
                                '${selffunc.funcValue}'
                            <#if selffunc_has_next> and</#if>
                        </#list>
                        )
                        <#if thisfunc_has_next> or </#if>
                    </#if>
                </#list>
                )
            </#if>
		) e
			]]>
    </sql>
    <sql id="removeRefuseTrial" >
        <![CDATA[
		UPDATE t_emp_trial
		SET STATUS = '5'
		WHERE
			id in (:id)
		AND STATUS IN ('20', '30', '60')
			]]>
    </sql>
    <sql id="getFinishTrialList" isRead="true">
        <![CDATA[
		SELECT
			*
		FROM
			t_emp_trial
		WHERE
			STATUS = 60
		AND end_date = :date
			]]>
    </sql>
    <sql id="checkRemoveRefuseTrial" isRead="true">
        <![CDATA[
		SELECT
			count(*)
		FROM
			t_emp_trial
		WHERE
			status not in('20','30')
		and id in(ids)
			]]>
    </sql>
    <sql id="checkTrialSame" isRead="true">
        <![CDATA[
		SELECT
			*
		FROM
			t_emp_trial
		WHERE
			STATUS != 5
		AND user_id = :userId
		AND company_id = :companyId
		limit 1
			]]>
    </sql>
    <sql id="updateApproveTrial" >
        <![CDATA[
		UPDATE ${filedValues.tableName}
		SET ${filedValues.filed} = '${filedValues.value}'
		WHERE
			id = :id
			]]>
    </sql>
    <sql id="findListByUserId" isRead="true">
        <![CDATA[
		SELECT
			t.id,
			u.emp_no empNo,
			u.user_name userName,
			u.organ_id organId,
			g.gangwei_name gangweiName,
			u.entry_date entryDate,
			o.organ_name organName,
			u.entry_shop_date entryShopDate,
			t.end_date endDate
		FROM
			t_emp_trial t
		LEFT JOIN wec_user u ON t.user_id = u.id
		LEFT JOIN t_gangwei g ON u.gangwei_id = g.id
		LEFT JOIN t_organ o ON u.organ_id = o.id
		WHERE
			t.user_id = :userId
		AND t.`status` = '60'
		AND t.company_id = :companyId
		AND t.end_date <= :date
			]]>
    </sql>
    <sql id="importTrialList" >
        <![CDATA[
			INSERT INTO t_emp_trial (
			id,
			user_id,
			end_date,
			remark,
			create_date,
			create_uid,
			company_id,
			STATUS,
			update_date,
			update_uid
			)
			VALUES
			<#if trialInfos?? && trialInfos?size gt 0>
                 <#list trialInfos as trialInfo>
                        (
                        '${trialInfo.id}',
                        '${trialInfo.userId}',
                        '${trialInfo.endDate}',
                        '${trialInfo.remark}',
                        :now,
                        :createUid,
                        :companyId,
                        :status,
                        :now,
                        :createUid
                        )
                  <#if trialInfo_has_next>,</#if>
                  </#list>
             </#if>
			]]>
    </sql>
    
   	<sql id="getTrialPageH5" isRead="true">
		<![CDATA[
			SELECT
				t.id,
				u.id userId,
				u.emp_no empNo,
				u.user_name userName,
				u.organ_id organId,
				u.gangwei_id gangweiId,
				g.gangwei_name gangweiName,
				u.entry_date entryDate,
				u.entry_shop_date entryShopDate,
				t.`status`,
				t.create_uid createUid,
				t.end_date endDate,
				t.process_id processId,
				uu.user_name updateUserName,
				t.update_date updateDate
			FROM
				wec_user u
			LEFT JOIN t_emp_trial t ON u.id = t.user_id AND t.`status` != '5'
			LEFT JOIN t_gangwei g ON u.gangwei_id = g.id
			LEFT JOIN t_organ o ON u.organ_id = o.id
			LEFT JOIN t_ext_t_emp_trial ext ON t.id = ext.id
			LEFT JOIN wec_user uu ON t.update_uid = uu.id
			WHERE
				u.company_id = :companyId
			AND u.user_status = '10'
			AND u.status = 0
			<#if key??  && key?length gt 0>
				AND (
				o.organ_name LIKE CONCAT('%', :key, '%')
				OR g.gangwei_name LIKE CONCAT('%', :key, '%')
				OR u.user_name LIKE CONCAT('%', :key, '%')
				OR u.emp_no LIKE CONCAT('%', :key, '%')
					)
			</#if>
			<#if dataRange??  && dataRange?length gt 0>
				${dataRange}
			</#if>
	       	<#if navigation??  && navigation?length gt 0>
	        	<#switch navigation>
		        <#case 1>
		         	AND t.id IS NULL
		        	<#break>
		        <#case 2>
		         	AND t.status = '10'
		        	<#break>
		        <#case 3>
		         	AND t.status = '60'
		        	<#break>
		        <#case 4>
		       	 	AND t.status IN ('20','30')
		        	<#break>
		        <#default>
		        </#switch>
	       	</#if>
            ORDER BY t.create_date DESC
		]]>
	</sql>
</sqlMap>