<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="SalaryAdjustment">

	<!-- 调薪记录列表分页查询 -->
	<sql id="getSalaryAdjustmentPage" isRead="true">
		<![CDATA[
			SELECT
				sa.id id,
				sa.user_id userId,
				sa.process_id processId,
				u.emp_no empNo,
				u.user_name userName,
				o.id organId,
				o.organ_name organName,
				gw.gangwei_name gangweiName,
				u.entry_date entryDate,
				sa.effective_date effectiveDate,
				sa.before_salary beforeSalary,
				sa.after_salary afterSalary,
				sa.use_salary_series useSalarySeries,
				sa.after_zhiji_id afterZhijiId,
				sa.after_series_id afterSeriesId,
				sa.after_series_name afterSeriesName,
				sa.after_xinzhi_total afterXinzhiTotal,
				sa.after_fuli_total afterFuliTotal,
				sa.pre_id preId,
				sa.remark remark,
				sa.status status,
				sa.create_date createDate,
				sa.create_uid  createUid,
				sa.update_date updateDate,
				sa.update_uid  updateUid,
				u2.user_name updateUserName
			FROM
				t_salary_adjustment sa
			LEFT JOIN wec_user u on u.id = sa.user_id
			left join wec_user u2 ON u2.id = sa.update_uid
			LEFT JOIN t_organ o on o.id = u.organ_id
			LEFT JOIN t_gangwei gw on gw.id = u.gangwei_id
			LEFT JOIN t_ext_t_salary_adjustment esa ON sa.id = esa.id
			WHERE
				sa.company_id = :companyId
			AND
			sa.status!= 5
			<#if keyword?? && keyword?length gt 0>
		    and (o.organ_name like concat('%',:keyword,'%')
			or
			gw.gangwei_name like concat('%',:keyword,'%')
			or
			u.user_name like concat('%',:keyword,'%')
			or
			u.emp_no like concat('%',:keyword,'%'))
		    </#if>
		    <#if dataRange??  && dataRange?length gt 0>
	            ${dataRange}
	       	</#if>
		    <#if organPaths?? && organPaths?length gt 0>
		    AND o.organ_paths like concat(:organPaths,'%')
		    </#if>
			<#if approvalType?? && approvalType?length gt 0>
				<#switch approvalType>
				<#case 1>
				 AND sa.status in (0,10)
				 <#break>
				<#case 2>
				 AND sa.status in (20,30)
				 <#break>
				<#case 3>
				 AND sa.status in (60)
				 <#break>
				<#case 4>
				 AND sa.status in (70)
				 <#break>
				<#default>
				</#switch>
			</#if>
			ORDER BY sa.effective_date desc
			]]>
	</sql>
	<!--查询一条员工调薪记录信息-->
	<sql id="getSalaryAdjustmentInfoById" isRead="true">
		<![CDATA[
			SELECT
				sa.id,
			    sa.user_id userId,
			    sa.process_id processId,
			    sa.status status,
			    u.user_name userName,
				u.emp_no empNo,
				o.id organId,
				o.organ_name organName,
				u.gangwei_id gangweiId,
				gw.gangwei_name gangweiName,
				u.entry_date entryDate,
				sa.effective_date effectiveDate,
				sa.before_salary beforeSalary,
				sa.after_salary afterSalary,
				sa.use_salary_series useSalarySeries,
				sa.after_zhiji_id afterZhijiId,
				sa.after_series_id afterSeriesId,
				sa.after_series_name afterSeriesName,
				sa.after_xinzhi_total afterXinzhiTotal,
				sa.after_fuli_total afterFuliTotal,
				sa.pre_id preId,
				sa.remark remark
				<#if customFieldStr??>${customFieldStr}</#if>
			FROM
				t_salary_adjustment sa
			LEFT JOIN t_ext_t_salary_adjustment ON t_ext_t_salary_adjustment.id = sa.id
			LEFT JOIN wec_user u on u.id = sa.user_id
			LEFT JOIN t_organ o on o.id = u.organ_id
			LEFT JOIN t_gangwei gw on gw.id = u.gangwei_id
			WHERE
				sa.id= :id
			]]>
	</sql>
	<!-- 员工调薪列表页自定义查询 -->
	<sql id="getSelfSalaryAdjustmentList">
		<![CDATA[
		SELECT
				sa.id id,
				sa.user_id userId,
				sa.process_id processId,
				u.emp_no empNo,
				u.user_name userName,
				o.id organId,
				o.organ_name organName,
				g.gangwei_name gangweiName,
				u.entry_date entryDate,
				sa.effective_date effectiveDate,
				sa.before_salary beforeSalary,
				sa.after_salary afterSalary,
				sa.use_salary_series useSalarySeries,
				sa.after_zhiji_id afterZhijiId,
				sa.after_series_id afterSeriesId,
				sa.after_series_name afterSeriesName,
				sa.after_xinzhi_total afterXinzhiTotal,
				sa.after_fuli_total afterFuliTotal,
				sa.pre_id preId,
				sa.remark remark,
				sa.status status,
				sa.create_date createDate,
				sa.create_uid  createUid,
				sa.update_date updateDate,
				sa.update_uid  updateUid,
				u2.user_name  updateUserName
				<#if selfFields??  && selfFields?size gt 0>
				,
            	<#list selfFields as selfField>
           		 	ext.${selfField.fieldName}
           		 	<#if selfField_has_next>,</#if>
        		</#list>
       		</#if>
       	FROM
       	    t_salary_adjustment sa
            left join wec_user u ON u.id = sa.user_id
            left join wec_user u2 ON u2.id = sa.update_uid
            left join t_organ o ON o.id = u.organ_id
            left join t_gangwei g ON g.id = u.gangwei_id
            left join t_ext_t_salary_adjustment ext  ON ext.id = sa.id
       	WHERE
       	    sa.company_id = :companyId
        AND
            sa.status != 5
       	<#if keyword?? && keyword?length gt 0>
		    and (o.organ_name like concat('%',:keyword,'%')
			or g.gangwei_name like concat('%',:keyword,'%')
			or u.user_name like concat('%',:keyword,'%')
			or u.emp_no like concat('%',:keyword,'%'))
		</#if>
		<#if dataRange??  && dataRange?length gt 0>
	            ${dataRange}
	    </#if>
		<#if organPaths?? && organPaths?length gt 0>
		    AND o.organ_paths like concat(:organPaths,'%')
		</#if>
		<#if approvalType?? && approvalType?length gt 0>
				<#switch approvalType>
				<#case 1>
				 AND sa.status in (0,10)
				 <#break>
				<#case 2>
				 AND sa.status in (20,30)
				 <#break>
				<#case 3>
				 AND sa.status in (60)
				 <#break>
				<#case 4>
				 AND sa.status in (70)
				 <#break>
				<#default>
				</#switch>
		</#if>
		<#if selfFunctions??  && selfFunctions?size gt 0>
				AND (
				<#list selfFunctions as thisfunc>
					<#if thisfunc??  && thisfunc?size gt 0>
						(
						<#list thisfunc as selffunc>
								${selffunc.sqlStr}
									<#if selffunc.funcType??  && selffunc.funcType?length gt 0>
										<#if selffunc.funcType = 0>
											<
										</#if>
										<#if selffunc.funcType = 1>
											=
										</#if>
										<#if selffunc.funcType = 2>
											>
										</#if>
									<#else>
									 like
									</#if>
								'${selffunc.funcValue}'
							<#if selffunc_has_next> and</#if>
						</#list>
						)
						<#if thisfunc_has_next> or </#if>
					</#if>
				</#list>
				)
			</#if>
			ORDER BY sa.effective_date desc
		]]>
	</sql>

	<sql id="getSalaryAdjustmentByUserId" isRead="true">
		<![CDATA[
			SELECT
			    sa.id id,
			    sa.process_id processId,
			    u.user_name userName,
				u.emp_no empNo,
				o.id organId,
				o.organ_name organName,
				gw.gangwei_name gangweiName,
				u.entry_date entryDate,
				sa.effective_date effectiveDate,
				sa.before_salary beforeSalary,
				sa.after_salary afterSalary,
				sa.use_salary_series useSalarySeries,
				sa.after_zhiji_id afterZhijiId,
				sa.after_series_id afterSeriesId,
				sa.after_series_name afterSeriesName,
				sa.after_xinzhi_total afterXinzhiTotal,
				sa.after_fuli_total afterFuliTotal,
				sa.pre_id preId,
				sa.remark remark
			FROM
				t_salary_adjustment sa
			LEFT JOIN wec_user u on u.id = sa.user_id
			LEFT JOIN t_organ o on o.id = u.organ_id
			LEFT JOIN t_gangwei gw on gw.id = u.gangwei_id
			WHERE
				sa.user_id= :userId
			AND sa.company_id = :companyId
			AND sa.status != 5
			AND sa.effective_date <=:date
			]]>
	</sql>

	<sql id="getFixedSalaryByUserId" isRead="true">
		<![CDATA[
			SELECT
			  sa.id id,
			  sa.process_id processId,
			  sa.status `status`,
			  sa.user_id userId,
			  u.user_name userName,
			  u.emp_no empNo,
			  o.id organId,
			  o.organ_name organName,
			  gw.gangwei_name gangweiName,
			  u.entry_date entryDate,
			  sa.effective_date effectiveDate,
			  sa.before_salary beforeSalary,
			  sa.after_salary afterSalary,
			  sa.use_salary_series useSalarySeries,
			  sa.after_zhiji_id afterZhijiId,
			  sa.after_series_id afterSeriesId,
			  sa.after_series_name afterSeriesName,
			  sa.after_xinzhi_total afterXinzhiTotal,
			  sa.after_fuli_total afterFuliTotal,
			  sa.pre_id preId,
			  sa.remark remark
			  <#if customFieldStr??>${customFieldStr}</#if>
			FROM
			  t_salary_adjustment sa
			  LEFT JOIN t_ext_t_salary_adjustment ext
			  	ON ext.id = sa.id
			  LEFT JOIN wec_user u
				ON u.id = sa.user_id
			  LEFT JOIN t_organ o
				ON o.id = u.organ_id
			  LEFT JOIN t_gangwei gw
				ON gw.id = u.gangwei_id
			WHERE sa.user_id = :userId
			  AND sa.company_id = :companyId
			  AND sa.`status` IN (60,70)
			ORDER BY sa.create_date
			LIMIT 1
			]]>
	</sql>

	<sql id="checkApplyCountByUserId" isRead="true">
		<![CDATA[
            select count(1) as count from t_salary_adjustment where user_id = :userId
            <#if bizId?? && bizId?length gt 0>
                AND id != :bizId
            </#if>
            and company_id = :companyId and status in ( 0 , 10 );
        ]]>
	</sql>

	<sql id="getSalaryAdjustmentCount" isRead="true">
		<![CDATA[
			SELECT
			    count(0) count,
				sa.status status
			FROM
				t_salary_adjustment sa
			LEFT JOIN wec_user u on u.id = sa.user_id
			LEFT JOIN t_organ o on o.id = u.organ_id
			LEFT JOIN t_gangwei gw on gw.id = u.gangwei_id
			WHERE
				sa.company_id = :companyId
			AND
			sa.status != 5
			<#if keyword?? && keyword?length gt 0>
		    and (o.organ_name like concat('%',:keyword,'%')
			or
			gw.gangwei_name like concat('%',:keyword,'%')
			or
			u.user_name like concat('%',:keyword,'%')
			or
			u.emp_no like concat('%',:keyword,'%'))
		    </#if>
		    <#if organPaths?? && organPaths?length gt 0>
		    AND o.organ_paths like concat(:organPaths,'%')
		    </#if>
			GROUP BY sa.status
			]]>
	</sql>
	<sql id="getSelfSalaryAdjustmentCount" isRead="true">
		<![CDATA[
			SELECT
			  COUNT(1) count,
			  sa.status status
			FROM
			  t_salary_adjustment sa
			  LEFT JOIN wec_user u
				ON u.id = sa.user_id
			  LEFT JOIN t_organ o
				ON o.id = u.organ_id
			  LEFT JOIN t_gangwei g
				ON g.id = u.gangwei_id
			  LEFT JOIN t_ext_t_salary_adjustment ext
				ON ext.id = sa.id
			WHERE sa.company_id = :companyId
			  AND sa.status != 5
			<#if keyword?? && keyword?length gt 0>
				and (o.organ_name like concat('%',:keyword,'%')
				or g.gangwei_name like concat('%',:keyword,'%')
				or u.user_name like concat('%',:keyword,'%')
				or u.emp_no like concat('%',:keyword,'%'))
		    </#if>
		    <#if organPaths?? && organPaths?length gt 0>
		    	AND o.organ_paths like concat(:organPaths,'%')
		    </#if>
            <#if dataRange??  && dataRange?length gt 0>
                ${dataRange}
            </#if>
            <#if functions??  && functions?size gt 0>
                and
                (
                <#list functions as thisfunc>
                <#if thisfunc??  && thisfunc?size gt 0>
                (
                <#list thisfunc as selffunc>
                ${selffunc.sqlStr}
                <#if selffunc.funcType??  && selffunc.funcType?length gt 0>
                <#if selffunc.funcType = 0> < </#if>
                <#if selffunc.funcType = 1> = </#if>
                <#if selffunc.funcType = 2> > </#if>
                <#else> like </#if>
                '${selffunc.funcValue}'
                <#if selffunc_has_next> and </#if>
                </#list>
                )
                <#if thisfunc_has_next> or </#if>
                </#if>
                </#list>
                )
            </#if>
			GROUP BY sa.status
			]]>
	</sql>
	<sql id="getSalaryAdjustmentByEffectiveDate" isRead="true">
		<![CDATA[
			SELECT
			    sa.id id,
				sa.effective_date effectiveDate,
				sa.status status
			FROM
				t_salary_adjustment sa
			WHERE
				sa.user_id= :userId
			AND sa.company_id = :companyId
			AND sa.status != 5
			AND sa.effective_date >= :effectiveDate
			]]>
	</sql>
	<sql id="getSalaryAdjustmentByEffectiveDate2" isRead="true">
		<![CDATA[
			SELECT
			    sa.id id,
				sa.effective_date effectiveDate,
				sa.status status
			FROM
				t_salary_adjustment sa
			WHERE
				sa.user_id= :userId
			AND sa.company_id = :companyId
			AND sa.status != 5
			AND sa.effective_date = :effectiveDate
			AND sa.effective_date != :beforeEffectiveDate
			]]>
	</sql>
	<sql id="getSalaryAdjustmentLastEffectiveDate" isRead="true">
		<![CDATA[
			SELECT
			  MAX(sa.effective_date) lastEffectiveDate
			FROM
			  t_salary_adjustment sa
			WHERE sa.`status` IN (0, 10, 60, 70)
			  AND sa.user_id= :userId
			  AND sa.company_id = :companyId
            <#if bizId?? && bizId?length gt 0>
              AND id != :bizId
            </#if>
			]]>
	</sql>
	<sql id="updateApprove">
		<![CDATA[
		    UPDATE ${filedValues.tableName}
		        SET ${filedValues.filed} = '${filedValues.value}'
		    WHERE
			    id = :id
		]]>
	</sql>
	<sql id="getNowSalary" isRead="true">
		<![CDATA[
			SELECT
			  sa.id,
			  sa.user_id userId,
			  sa.process_id processId,
			  sa.status `status`,
			  sa.effective_date effectiveDate,
			  sa.before_salary beforeSalary,
			  sa.after_salary afterSalary,
			  sa.use_salary_series useSalarySeries,
			  sa.after_zhiji_id afterZhijiId,
			  sa.after_series_id afterSeriesId,
			  sa.after_series_name afterSeriesName,
			  sa.after_xinzhi_total afterXinzhiTotal,
			  sa.after_fuli_total afterFuliTotal,
			  sa.pre_id preId,
			  sa.remark remark
			  <#if customFieldStr??>${customFieldStr}</#if>
			FROM
			  t_salary_adjustment sa
			  LEFT JOIN t_ext_t_salary_adjustment
				ON t_ext_t_salary_adjustment.id = sa.id
			WHERE sa.`status` IN (60, 70)
			  AND sa.user_id = :userId
			  AND sa.company_id = :companyId
			ORDER BY sa.effective_date DESC
			LIMIT 1
			]]>
	</sql>
	<sql id="getRelatedList" isRead="true">
		<![CDATA[
			select * from t_salary_adjustment
			where
			user_id = :userId
			and company_id = :companyId
			and effective_date > :effectiveDate
		]]>
	</sql>
</sqlMap>
